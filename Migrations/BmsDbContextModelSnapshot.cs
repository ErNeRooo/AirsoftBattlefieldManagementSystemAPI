// <auto-generated />
using System;
using AirsoftBattlefieldManagementSystemAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirsoftBattlefieldManagementSystemAPI.Migrations
{
    [DbContext(typeof(BmsDbContext))]
    partial class BmsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Battle", b =>
                {
                    b.Property<int>("BattleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BattleID"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("BattleID");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Kill", b =>
                {
                    b.Property<int>("KillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KillID"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KilledPlayerID")
                        .HasColumnType("int");

                    b.Property<int>("KillerPlayerID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.HasKey("KillID");

                    b.HasIndex("KilledPlayerID");

                    b.HasIndex("KillerPlayerID");

                    b.HasIndex("LocationID");

                    b.ToTable("Kills");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<short>("Accuracy")
                        .HasColumnType("smallint");

                    b.Property<short>("Bearing")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDead")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("AccountID");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.PlayerLocation", b =>
                {
                    b.Property<int>("PlayerLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerLocationID"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("PlayerLocationID");

                    b.HasIndex("LocationID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerLocations");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamID"));

                    b.Property<int>("BattleID")
                        .HasColumnType("int");

                    b.Property<int>("BattleID1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TeamID");

                    b.HasIndex("BattleID1");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Kill", b =>
                {
                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Player", "KilledPlayer")
                        .WithMany()
                        .HasForeignKey("KilledPlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Player", "KillerPlayer")
                        .WithMany()
                        .HasForeignKey("KillerPlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KilledPlayer");

                    b.Navigation("KillerPlayer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Player", b =>
                {
                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.PlayerLocation", b =>
                {
                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("AirsoftBattlefieldManagementSystemAPI.Entities.Team", b =>
                {
                    b.HasOne("AirsoftBattlefieldManagementSystemAPI.Entities.Battle", "Battle")
                        .WithMany()
                        .HasForeignKey("BattleID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");
                });
#pragma warning restore 612, 618
        }
    }
}
